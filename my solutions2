//countX
public int countX(String str) {
  return countX(str, 0);
}
private int countX(String str, int index) {
  if (index == str.length()) {
    return 0;
  }
  if (str.charAt(index) == 'x') {
    return 1 + countX(str, index + 1);
  } else {
    return countX(str, index + 1);
  }
}

//countHi
public int countHi(String str) {
  if (str == null || str.length() == 0) {
    return 0;
  }
  return countHi(str, 0);
}

private int countHi(String str, int index) {
  if (index == str.length()-1) {
    return 0;
  }
  
  if (str.charAt(index) == 'h' && str.charAt(index+1) == 'i') {
    return 1 + countHi(str, index+1);
  } else {
    return countHi(str, index+1);
  }
}

//changeXY
public String changeXY(String str) {
  char[] c = str.toCharArray();
  return new String(changeXY(c, 0));
}
private char[] changeXY(char[] c, int index) {
  if (index == c.length) {
    return c;
  }
  if (c[index] == 'x') {
    c[index] = 'y';
    return changeXY(c, index+1);
  } else {
    return changeXY(c, index+1);
  }
}


//changePi
public String changePi(String str) {
  if (str == null || str.length() == 0) {
    return str;
  }
  return changePi(str, 0);
}

private String changePi(String str, int index) {
  if (index == str.length()) {
    return "";
  }
  if (index == str.length()-1) {
    return Character.toString(str.charAt(index));
  }
  if (str.charAt(index) == 'p' && str.charAt(index+1) == 'i') {
    return "3.14" + changePi(str, index+2);
  } else {
    return str.charAt(index) + changePi(str, index+1);
  }
}


//noX
public String noX(String str) {
  if (str == null || str.length() == 0) {
    return str;
  }
  if (str.charAt(0) == 'x') {
    return noX(str.substring(1));
  } else {
    return str.charAt(0) + noX(str.substring(1));
  }
}


//array6
public boolean array6(int[] nums, int index) {
  if (nums == null || nums.length == 0) {
    return false;
  }
  if (index == nums.length) {
    return false;
  }
  if (nums[index] == 6) {
    return true;
  } else {
    return array6(nums, index+1);
  }
}

//array11
public int array11(int[] nums, int index) {
  if (nums == null || nums.length == 0) {
    return 0;
  }
  if (index == nums.length) {
    return 0;
  }
  if (nums[index] == 11) {
    return 1 + array11(nums, index+1);
  } else {
    return array11(nums, index+1);
  }
}


//array220
public boolean array220(int[] nums, int index) {
  if (nums == null || nums.length <= 1) {
    return false;
  }
  if (index == nums.length-1) {
    return false;
  }
  if (nums[index+1] == nums[index]*10) {
    return true;
  } else {
    return array220(nums, index+1);
  }
}


//allStar
public String allStar(String str) {
  if (str == null || str.length() <= 1) {
    return str;
  }
  return str.charAt(0) + "*" + allStar(str.substring(1));
}


//pairStar
public String pairStar(String str) {
  if (str == null || str.length() <= 1) {
    return str;
  }
  if (str.charAt(0) == str.charAt(1)) {
    return str.charAt(0) + "*" + pairStar(str.substring(1));
  } else {
    return str.charAt(0) + pairStar(str.substring(1));
  }
}


// endX
public String endX(String str) {
  if (str == null || str.length()== 0) {
    return str;
  }
  if (str.charAt(0) == 'x') {
    return endX(str.substring(1)) + "x";
  } else {
    return str.charAt(0) + endX(str.substring(1));
  }
}


//countPairs
public int countPairs(String str) {
  if (str == null || str.length() <= 2) {
    return 0;
  }
  if (str.charAt(0) == str.charAt(2)) {
    return 1 + countPairs(str.substring(1));
  } else {
    return countPairs(str.substring(1));
  }
}
