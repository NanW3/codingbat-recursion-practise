//countAbc
public int countAbc(String str) {
  if (str == null || str.length() <= 2) {
    return 0;
  }
  if (str.charAt(0) == 'a' && str.charAt(1) == 'b') {
    if (str.charAt(2) == 'c' || str.charAt(2) == 'a') {
      return 1 + countAbc(str.substring(2));
    } 
  }
  return countAbc(str.substring(1));

}

//count11
public int count11(String str) {
  if (str == null || str.length() <= 1) {
    return 0;
  }
  
  if (str.charAt(0) == '1' && str.charAt(1) == '1') {
    return 1 + count11(str.substring(2));
  } else {
    return count11(str.substring(1));
  }
}


//stringClean
public String stringClean(String str) {
  if (str == null || str.length() <= 1) {
    return str;
  }
  
  if (str.charAt(0) == str.charAt(1)) {
    return stringClean(str.substring(1));
  } else {
    return str.charAt(0) + stringClean(str.substring(1));
  }
}


//countHi2
public int countHi2(String str) {
 return helper2(str)-helper(str);
}

private int helper(String str) {
   if (str == null || str.length() <= 2) {
    return 0;
  }
  if (str.charAt(0) == 'x' && str.charAt(1) == 'h' && str.charAt(2) == 'i') {
    return 1 + helper(str.substring(3));
  } else {
    return helper(str.substring(1));
  }
}

public int helper2(String str) {
   if (str == null || str.length() <= 1) {
    return 0;
  }
  if (str.charAt(0) == 'h' && str.charAt(1) == 'i') {
    return 1 + helper2(str.substring(2));
  } else {
    return helper2(str.substring(1));
  }
}



//parenBit
public String parenBit(String str) {
  int len = str.length();
  if (str == null || len == 0) {
    return str;
  }
  
  if (str.charAt(0) == '(' && str.charAt(len-1) == ')') {
    return str;
  } else if (str.charAt(0) == '(') {
    return parenBit(str.substring(0, len - 1));
  } else if (str.charAt(len-1) == ')') {
    return parenBit(str.substring(1, len));
  } else {
    return parenBit(str.substring(1,len-1));
  }
}



//nestParen
public boolean nestParen(String str) {
  int len = str.length();
  if (len%2 != 0) {
    return false;
  }
  if (str == null || len == 0) {
    return true;
  }
  if (len == 2 && str.charAt(0) == '(' && str.charAt(len-1) == ')') {
    return true;
  }
  if (str.charAt(0) == '(' && str.charAt(len-1) == ')') {
    return nestParen(str.substring(1,len-1));
  } else {
    return false;
  }
}


//strCount
public int strCount(String str, String sub) {
  int len = sub.length();
  if (str.length() < len) {
    return 0;
  }
  
  if (str.substring(0,len).equals(sub)) {
    return 1 + strCount(str.substring(len), sub);
  } else {
    return strCount(str.substring(1), sub);
  }
}



//strCopies
public boolean strCopies(String str, String sub, int n) {
  return n <= helper(str, sub);
}

private int helper(String str, String sub) {
  int len = sub.length();
  if (str.length() < len) {
    return 0;
  }
  if (str.substring(0, len).equals(sub)) {
    return 1 + helper(str.substring(1), sub);
  } else {
    return helper(str.substring(1), sub);
  }
}



//strDist
public int strDist(String str, String sub) {
  int len = str.length();
  int slen = sub.length();
  if (len == 1 && str.equals(sub)) {
    return 1;
  } else if (len < slen || len <= 1) {
    return 0;
  } else {
    if (str.charAt(0) == sub.charAt(0)
       && str.charAt(0) == str.charAt(len - slen)
       && str.substring(len- slen,len).equals(sub)
       && str.substring(0, slen).equals(sub)) {
      return len;
    } else {
      if (str.substring(0, slen).equals(sub)) {
        return strDist(str.substring(0, len - 1), sub);
      } else if(str.substring(len - slen, len).equals(sub)) {
        return strDist(str.substring(1, len), sub);
      }
      return strDist(str.substring(1, len-1), sub);
    }
  }
}
